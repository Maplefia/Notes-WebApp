/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-16 18:04:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import uk.ac.ucl.model.Note;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("uk.ac.ucl.model.Note");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("  <title>Notes</title>\n");
      out.write("  <link href=\"./mainIndex.css\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"Navbar\">\n");
      out.write("  <div class=\"NavbarLeft\">\n");
      out.write("    <a href=\"/\">Home</a>\n");
      out.write("    <form method=\"POST\" action=\"/newNote.html\">\n");
      out.write("      <button type=\"submit\" name=\"newNote\" value=\"true\">New Note</button>\n");
      out.write("    </form>\n");
      out.write("    <form method=\"POST\" action=\"/editCategories.html\">\n");
      out.write("      <button type=\"submit\" name=\"editCategories\" value=\"true\">Edit Categories</button>\n");
      out.write("    </form>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"NavbarRight\">\n");
      out.write("    <div class=\"Dropdown\">\n");
      out.write("      <form action=\"/sortNotes.html\" method=\"POST\">\n");
      out.write("        <select name=\"filterBy\">\n");
      out.write("          ");
 List<String> allCategories = (List<String>) request.getAttribute("allCategories");
             String selectedFilter = (String) request.getAttribute("selectedFilter");
             String selectedSort = (String) request.getAttribute("selectedSort"); 
      out.write("\n");
      out.write("            <option value=\"all\" ");
      out.print( "all".equals(selectedFilter) ? "selected" : "");
      out.write(">All Notes</option>\n");
      out.write("            ");
 for (String category: allCategories) { 
      out.write("\n");
      out.write("            <option value=\"");
      out.print(category);
      out.write('"');
      out.write(' ');
      out.print( category.equals(selectedFilter) ? "selected" : "");
      out.write('>');
      out.print(category);
      out.write("</option>\n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        </select>\n");
      out.write("        <select name=\"sortBy\">\n");
      out.write("          <option value=\"dateCreated\" ");
      out.print( "dateCreated".equals(selectedSort) ? "selected" : "" );
      out.write(">Date Created</option>\n");
      out.write("          <option value=\"dateUpdated\" ");
      out.print( "dateUpdated".equals(selectedSort) ? "selected" : "" );
      out.write(">Date Updated</option>\n");
      out.write("          <option value=\"title\" ");
      out.print( "title".equals(selectedSort) ? "selected" : "" );
      out.write(">Title</option>\n");
      out.write("        </select>\n");
      out.write("        <button type=\"submit\" class=\"navbarButton\">Filter</button>\n");
      out.write("      </form>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"SearchBar\">\n");
      out.write("      <form method=\"POST\" action=\"/searchNotes.html\">\n");
      out.write("        <input type=\"text\" name=\"searchQuery\" placeholder=\"Search...\"/>\n");
      out.write("      </form>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("  <div class=\"NotesIndexContainer\">\n");
      out.write("    <div class=\"NotesIndexWrapper\">\n");
      out.write("      ");
 List<Note> notes = (List<Note>) request.getAttribute("notes");
        if (notes.isEmpty()) { 
      out.write("\n");
      out.write("          <div><p>Seems a bit empty here...</p></div>\n");
      out.write("        ");
 } else {
          for (Note note : notes) {
            String title = note.getTitle();
            String updatedAt = note.getUpdatedAt();
            String id = note.getId();
            String preview = note.findPreview();
            List<String> categories = note.getCategories();
            String categoriesString = String.join(",", categories);
          
      out.write("\n");
      out.write("            <div class=\"NotesIndexElement\" onclick=\"document.getElementById('noteForm");
      out.print(id );
      out.write("').submit()\">\n");
      out.write("              <h3>");
      out.print(title);
      out.write("</h3>\n");
      out.write("              <p>");
      out.print(preview);
      out.write("</p>\n");
      out.write("              <p>Last Updated at: ");
      out.print(updatedAt);
      out.write("</p>\n");
      out.write("              ");
 if (!categories.isEmpty()) { 
      out.write("\n");
      out.write("                <p>Categories: ");
      out.print(categoriesString);
      out.write("</p>\n");
      out.write("              ");
 } 
      out.write("\n");
      out.write("            </div>\n");
      out.write("            <form method=\"GET\" action=\"/showNoteContent.html\" id=\"noteForm");
      out.print(id );
      out.write("\">\n");
      out.write("              <input type=\"hidden\" name=\"id\" value=\"");
      out.print( id);
      out.write("\"/>\n");
      out.write("            </form>\n");
      out.write("          ");
 }
        }
      
      out.write("\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
